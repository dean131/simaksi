<% styles = `
<script src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.8/html5-qrcode.min.js"></script>
<style>
  /* Container styles */
  #reader {
    width: 100% !important;
    min-height: 400px !important;
  }

  /* Camera view styles */
  #reader__scan_region {
    text-align: center !important;
  }
  
  #reader__scan_region video {
    width: 100% !important;
    max-height: 70vh !important;
    object-fit: cover !important;
  }

  /* Other UI elements */
  #reader select {
    padding: 0.375rem 0.75rem !important;
    font-size: 1rem !important;
    border-radius: 0.375rem !important;
    border: 1px solid #dee2e6 !important;
    width: auto !important;
    margin: 10px auto !important;
  }

  #reader button {
    color: #fff !important;
    background-color: #0d6efd !important;
    border-color: #0d6efd !important;
    padding: 0.375rem 0.75rem !important;
    font-size: 1rem !important;
    border-radius: 0.375rem !important;
    margin: 10px auto !important;
    border: 1px solid transparent !important;
  }

  #reader button:hover {
    background-color: #0b5ed7 !important;
    border-color: #0a58ca !important;
  }
</style>
` %>

<div class="card">
  <h3 class="card-header fw-semibold mb-4">
    Scan Trip
  </h3>
  <div class="card-body p-0">
    <div id="reader"></div>
    <div id="result" class="mt-3 p-3"></div>
  </div>
</div>

<script>
  // Get container width for responsive sizing
  const getQRBoxSize = () => {
    const width = document.getElementById('reader').offsetWidth;
    return {
      width: Math.min(width, 600),
      height: Math.min(width, 600)
    };
  };

  const createScanner = () => {
    return new Html5QrcodeScanner("reader", {
      fps: 10,
      qrbox: getQRBoxSize(),
      aspectRatio: 1,
      videoConstraints: {
        facingMode: "environment"
      }
    });
  };

  const reinitializeScanner = () => {
    const resultContainer = document.querySelector('#result');
    resultContainer.innerHTML = '';
    html5QrcodeScanner = createScanner();
    html5QrcodeScanner.render(onScanSuccess);
  };

  const onScanSuccess = async (decodedText, decodedResult) => {
    html5QrcodeScanner.clear();
    const resultContainer = document.querySelector('#result');
    resultContainer.innerHTML = '<div class="alert">Memproses...</div>';

    try {
      const response = await fetch('/api/trips/' + decodedText + '/scan', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': getCookie('admin_id')
        }
      });

      const data = await response.json();

      if (response.ok) {
        resultContainer.innerHTML = `
          <div class="alert alert-success mb-3">
            ${data.message || 'Berhasil Scan'}
          </div>
          <button class="btn btn-primary" onclick="reinitializeScanner()">
            Scan Lagi
          </button>`;
      } else {
        resultContainer.innerHTML = `
          <div class="alert alert-danger mb-3">
            ${data.error || 'Gagal Scan'}
          </div>
          <button class="btn btn-primary" onclick="reinitializeScanner()">
            Scan Lagi
          </button>`;
      }
    } catch (error) {
      resultContainer.innerHTML = `
        <div class="alert alert-danger mb-3">
          Terjadi kesalahan: ${error.message}
        </div>
        <button class="btn btn-primary" onclick="reinitializeScanner()">
          Scan Lagi
        </button>`;
    }
  };

  let html5QrcodeScanner = createScanner();
  html5QrcodeScanner.render(onScanSuccess);
</script>