<% styles = `
<script src="https://cdnjs.cloudflare.com/ajax/libs/html5-qrcode/2.3.8/html5-qrcode.min.js"></script>
<style>
  /* Style for camera selection dropdown */
  #reader select {
    padding: 0.375rem 0.75rem !important;
    font-size: 1rem !important;
    border-radius: 0.375rem !important;
    border: 1px solid #dee2e6 !important;
    width: auto !important;
    margin: 10px auto !important;
  }

  /* Style for start scanning button */
  #reader button {
    color: #fff !important;
    background-color: #0d6efd !important;
    border-color: #0d6efd !important;
    padding: 0.375rem 0.75rem !important;
    font-size: 1rem !important;
    border-radius: 0.375rem !important;
    margin: 10px auto !important;
    border: 1px solid transparent !important;
  }

  #reader button:hover {
    background-color: #0b5ed7 !important;
    border-color: #0a58ca !important;
  }

  /* Center the camera UI elements */
  #reader__scan_region {
    text-align: center !important;
  }
</style>
` %>


<div class="card">
  <h3 class="card-header fw-semibold mb-4">
    Scan Trip
  </h3>
  <div class="card-body">
    <div id="reader"></div>
    <div id="result" class="mt-3"></div>
  </div>
</div>

<!-- <script>
  document.addEventListener("DOMContentLoaded", () => {
    setTimeout(() => {
      // Tambahkan kelas pada tombol
      const buttons = document.querySelectorAll("#reader button");
      buttons.forEach(button => {
        button.classList.add("btn", "btn-primary");
      });

      // Tambahkan kelas pada elemen select
      const selects = document.querySelectorAll("#reader select");
      selects.forEach(select => {
        select.classList.add("form-select", "mx-2");
      });
    }, 1000); // Tunggu sedikit untuk memastikan scanner telah diinisialisasi
  });
</script> -->

<script>
  const reinitializeScanner = () => {
    // Clear result container
    const resultContainer = document.querySelector('#result');
    resultContainer.innerHTML = '';

    // Reinitialize scanner
    html5QrcodeScanner = new Html5QrcodeScanner(
      "reader", {
        fps: 10,
        qrbox: {
          width: 250,
          height: 250
        }
      }
    );
    html5QrcodeScanner.render(onScanSuccess);
  }

  const onScanSuccess = async (decodedText, decodedResult) => {
    // Stop the scanner
    html5QrcodeScanner.clear();

    const resultContainer = document.querySelector('#result');
    resultContainer.innerHTML = '<div class="alert">Memproses...</div>';

    try {
      const response = await fetch('/api/trips/' + decodedText + '/scan', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': getCookie('admin_id')
        }
      });

      const data = await response.json();

      if (response.ok) {
        resultContainer.innerHTML = `
            <div class="alert alert-success mb-3">
              ${data.message || 'Berhasil Scan'}
            </div>
            <button class="btn btn-primary" onclick="reinitializeScanner()">
              Scan Lagi
            </button>`;
      } else {
        resultContainer.innerHTML = `
            <div class="alert alert-danger mb-3">
              ${data.error || 'Gagal Scan'}
            </div>
            <button class="btn btn-primary" onclick="reinitializeScanner()">
              Scan Lagi
            </button>`;
      }
    } catch (error) {
      resultContainer.innerHTML = `
          <div class="alert alert-danger mb-3">
            Terjadi kesalahan: ${error.message}
          </div>
          <button class="btn btn-primary" onclick="reinitializeScanner()">
            Scan Lagi
          </button>`;
    }
  }

  let html5QrcodeScanner = new Html5QrcodeScanner(
    "reader", {
      fps: 10,
      qrbox: {
        width: 250,
        height: 250
      }
    }
  );
  html5QrcodeScanner.render(onScanSuccess);
</script>