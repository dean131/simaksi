<div class="card">
  <h3 class="card-header fw-semibold mb-4">
    Data Trip
  </h3>
  <div class="card-body">
    <div class="table-responsive">
      <table id="tripsTable" class="display">
        <thead>
          <tr>
            <th>ID</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Checked In</th>
            <th>Checked Out</th>
            <th>Status</th>
            <th>Anggota</th>
            <th>User ID</th>
            <th>Aksi</th>
          </tr>
        </thead>
        <tbody>
        </tbody>
      </table>
    </div>
  </div>
</div>

<% scripts = `
<script>
  $(document).ready(function() {
    // Initialize DataTable
    $('#tripsTable').DataTable({
      ajax: {
        url: '/api/trips',
        type: 'GET',
        headers: {
          'Authorization': getCookie('admin_id')
        },
      },
      columns: [
        {
          data: 'id'
        },
        {
          data: 'start_date',
          render: function(data) {
            return new Date(data).toLocaleString();
          }
        },
        {
          data: 'end_date',
          render: function(data) {
            return new Date(data).toLocaleString();
          }
        },
        {
          data: 'checked_in_at',
          render: function(data) {
            return data ? new Date(data).toLocaleString() : 'N/A';
          }
        },
        {
          data: 'checked_out_at',
          render: function(data) {
            return data ? new Date(data).toLocaleString() : 'N/A';
          }
        },
        {
          data: 'status',
          render: function(data) {
            if (data === 'dibatalkan') {
              return '<span class="badge bg-danger">Dibatalkan</span>';
            } else if (data === 'selesai') {
              return '<span class="badge bg-success">Selesai</span>';
            } else if (data === 'aktif') {
              return '<span class="badge bg-primary">Aktif</span>';
            } else if (data === 'lunas') {
              return '<span class="badge bg-info">Lunas</span>';
            } else if (data === 'menunggu') {
              return '<span class="badge bg-warning">Menunggu</span>';
            } else {
              return '<span class="badge bg-secondary">Tidak diketahui</span>';
            }
          }
        },
        {
          data: 'members',
          render: function(data) {
            if (data && data.length > 0) {
              // Render data as an unordered list
              return '<ul>' + data.map(name => '<li>' + name + '</li>').join('') + '</ul>';
            }
            return '<span class="text-muted">No Members</span>'; // Default message if no members
          }
        },
        {
          data: 'user_id'
        },
        {
          data: 'id',
          render: function(data, type, row) {
            const { status, checked_in_at, checked_out_at } = row; // Access status directly from the row data

            // Disable buttons based on status
            let cancelBtnDisabled = false;
            let checkInBtnDisabled = false;
            let checkOutBtnDisabled = false;

            // Apply button disabling logic based on status
            if (status === 'dibatalkan') {
              cancelBtnDisabled = true;
              checkInBtnDisabled = true;
              checkOutBtnDisabled = true;
            } else if (status === 'aktif') {
              cancelBtnDisabled = true;  // "Batal" should be disabled when status is "aktif"
              checkInBtnDisabled = true; // "Check-in" should be disabled when status is "aktif"
              checkOutBtnDisabled = false; // Only "Check-out" is enabled when status is "aktif"
            } else if (status === 'menunggu') {
              cancelBtnDisabled = false;
              checkInBtnDisabled = true;
              checkOutBtnDisabled = true;
            } else if (status === 'selesai') {
              cancelBtnDisabled = true;
              checkInBtnDisabled = true;
              checkOutBtnDisabled = true;
            } else if (status === 'lunas') {
              cancelBtnDisabled = true;
              checkInBtnDisabled = checked_in_at ? true : false; // If already checked in, disable Check-in
              checkOutBtnDisabled = true; // Cannot check out after payment is settled
            }

            // Return buttons with appropriate disabled attributes
            return '<div class="btn-group btn-group-sm" role="group" aria-label="Basic example">' +
              '<button type="button" class="btn btn-sm btn-outline-danger btn-cancel" data-id="' + data + '" ' + (cancelBtnDisabled ? 'disabled' : '') + '>Batal</button>' +
              '<button type="button" class="btn btn-sm btn-outline-primary btn-check-in" data-id="' + data + '" ' + (checkInBtnDisabled ? 'disabled' : '') + '>In</button>' +
              '<button type="button" class="btn btn-sm btn-outline-success btn-check-out" data-id="' + data + '" ' + (checkOutBtnDisabled ? 'disabled' : '') + '>Out</button>' +
              '</div>';
          }
        }
      ],
    });
  });

</script>
` %>

<script>
  document.addEventListener('click', async (e) => {
    if (e.target.classList.contains('btn-cancel')) {
      const tripId = e.target.dataset.id;
      const response = await fetch(`/api/trips/${tripId}/cancel`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': getCookie('admin_id')
        }
      });
      if (response.ok) {
        window.location.reload();
      } else {
        alert('Gagal membatalkan trip!\nerror: ' + response.errors);
      }
    }
  })

  document.addEventListener('click', async (e) => {
    if (e.target.classList.contains('btn-check-in')) {
      const tripId = e.target.dataset.id;
      const response = await fetch(`/api/trips/${tripId}/check-in`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': getCookie('admin_id')
        }
      });
      if (response.ok) {
        window.location.reload();
      } else {
        alert('Gagal check in!\nerror: ' + response);
      }
    }
  });

  document.addEventListener('click', async (e) => {
    if (e.target.classList.contains('btn-check-out')) {
      const tripId = e.target.dataset.id;
      const response = await fetch(`/api/trips/${tripId}/check-out`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': getCookie('admin_id')
        }
      });
      if (response.ok) {
        window.location.reload();
      } else {
        alert('Gagal check out!\nerror: ' + response);
      }
    }
  });
</script>